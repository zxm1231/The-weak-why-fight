%PDF-1.6%‚„œ”
1 0 obj<</Names 60 0 R/Outlines 5 0 R/Metadata 65 0 R/Pages 2 0 R/SpiderInfo 50 0 R/StructTreeRoot 7 0 R/Type/Catalog>>endobj2 0 obj<</Count 9/Type/Pages/Kids[11 0 R 16 0 R 18 0 R 20 0 R 22 0 R 24 0 R 26 0 R 28 0 R 30 0 R]>>endobj3 0 obj<</CreationDate(D:20061203063325+01'00')/Producer(Acrobat Web Capture 7.0)/ModDate(D:20061203063331+01'00')/Title(Programming Assignment 1: Building a Multi-Threaded Web Server)>>endobj5 0 obj<</First 63 0 R/Count 2/Last 63 0 R/Type/Outlines>>endobj7 0 obj<</K 9 0 R/ParentTree 12 0 R/ParentTreeNextKey 9/Type/StructTreeRoot/ClassMap 8 0 R>>endobj8 0 obj<</SpdrArt<</O/WebCapture>>>>endobj9 0 obj<</K 10 0 R/P 7 0 R/S/Document>>endobj10 0 obj<</C/SpdrArt/K[0<</MCID 0/Pg 16 0 R/Type/MCR>><</MCID 0/Pg 18 0 R/Type/MCR>><</MCID 0/Pg 20 0 R/Type/MCR>><</MCID 0/Pg 22 0 R/Type/MCR>><</MCID 0/Pg 24 0 R/Type/MCR>><</MCID 0/Pg 26 0 R/Type/MCR>><</MCID 0/Pg 28 0 R/Type/MCR>><</MCID 0/Pg 30 0 R/Type/MCR>>]/P 9 0 R/S/Article/T()/Pg 11 0 R>>endobj11 0 obj<</Annots 15 0 R/Parent 2 0 R/ID 56 0 R/StructParents 0/Contents 38 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/TT1 36 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj12 0 obj<</Nums[0 13 0 R 1 17 0 R 2 19 0 R 3 21 0 R 4 23 0 R 5 25 0 R 6 27 0 R 7 29 0 R 8 31 0 R]>>endobj13 0 obj[10 0 R]endobj14 0 obj<</Rect[355.288 592.25 412.25 605.75]/Subtype/Link/BS<</S/S/W 0/Type/Border>>/A<</URI(http://www.rfc-editor.org/rfc/rfc1945.txt)/S/URI>>/Border[0 0 0]>>endobj15 0 obj[14 0 R]endobj16 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 1/Contents 39 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj17 0 obj[10 0 R]endobj18 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 2/Contents 40 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj19 0 obj[10 0 R]endobj20 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 3/Contents 41 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj21 0 obj[10 0 R]endobj22 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 4/Contents 42 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj23 0 obj[10 0 R]endobj24 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 5/Contents 43 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/TT1 36 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj25 0 obj[10 0 R]endobj26 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 6/Contents 46 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/TT1 44 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj27 0 obj[10 0 R]endobj28 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 7/Contents 47 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj29 0 obj[10 0 R]endobj30 0 obj<</Parent 2 0 R/ID 56 0 R/StructParents 8/Contents 48 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</TT0 33 0 R/T1_0 32 0 R/T1_1 35 0 R>>/ProcSet[/PDF/Text]>>/Type/Page>>endobj31 0 obj[10 0 R]endobj32 0 obj<</Subtype/Type1/BaseFont/Times-Roman/Encoding/WinAnsiEncoding/Type/Font>>endobj33 0 obj<</Subtype/TrueType/FontDescriptor 34 0 R/LastChar 255/Widths[750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 350 556 350 222 556 333 1000 556 556 333 1000 667 333 1000 350 611 350 350 222 222 333 333 350 556 1000 333 1000 500 333 944 350 500 667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500]/BaseFont/Arial/FirstChar 0/Encoding/WinAnsiEncoding/Type/Font>>endobj34 0 obj<</StemV 88/FontName/Arial/FontStretch/Normal/FontWeight 400/Flags 32/Descent -325/FontBBox[-665 -325 2000 1006]/Ascent 1006/FontFamily(Arial)/CapHeight 716/XHeight 519/Type/FontDescriptor/ItalicAngle 0>>endobj35 0 obj<</Subtype/Type1/BaseFont/Courier/Encoding/WinAnsiEncoding/Type/Font>>endobj36 0 obj<</Subtype/TrueType/FontDescriptor 37 0 R/LastChar 255/Widths[750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 333 474 556 556 889 722 238 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 333 333 584 584 584 611 975 722 722 722 722 667 611 778 722 278 556 722 611 833 722 778 667 778 722 667 611 722 667 944 667 667 611 333 278 333 584 556 333 556 611 556 611 556 333 611 611 278 278 556 278 889 611 611 611 611 389 556 333 611 556 778 556 556 500 389 280 389 584 350 556 350 278 556 500 1000 556 556 333 1000 667 333 1000 350 611 350 350 278 278 500 500 350 556 1000 333 1000 556 333 944 350 500 667 278 333 556 556 556 556 280 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 556 278 333 333 365 556 834 834 834 611 722 722 722 722 722 722 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 556 556 556 556 556 278 278 278 278 611 611 611 611 611 611 611 549 611 611 611 611 611 556 611 556]/BaseFont/Arial,Bold/FirstChar 0/Encoding/WinAnsiEncoding/Type/Font>>endobj37 0 obj<</StemV 136/FontName/Arial,Bold/FontStretch/Normal/FontWeight 700/Flags 32/Descent -376/FontBBox[-628 -376 2000 1010]/Ascent 1010/FontFamily(Arial)/CapHeight 716/XHeight 519/Type/FontDescriptor/ItalicAngle 0>>endobj38 0 obj<</Length 4188>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0.655 0.486 0.275 rg
BT
/TT0 1 Tf
23.75 0 0 23.75 10 726.6742 Tm
(Programming Assignment 1: Building a Multi-Threaded )Tj
0 -1.2 TD
(Web Server)Tj
0 0 0 rg
12.5 0 0 12.5 10 660.3022 Tm
(In this lab we will develop a Web server in two steps. In the end, you w\ill have built a multi-threaded Web )Tj
T*
(server that is capable of processing multiple simultaneous service reque\sts in parallel. You should be able )Tj
T*
(to demonstrate that your Web server is capable of delivering your home p\age to a Web browser. )Tj
0 -2.72 TD
(We are going to implement version 1.0 of HTTP, as defined in )Tj
ET
0 0 0.4 RG
0.6 w 10 M 0 j 0 J []0 d 
355.288 594.502 m
412.25 594.502 l
S
0 0 0.4 rg
BT
/TT0 1 Tf
12.5 0 0 12.5 355.2875 596.3022 Tm
(RFC 1945)Tj
0 0 0 rg
(, where separate HTTP requests )Tj
-27.623 -1.36 Td
(are sent for each component of the Web page. The server will be able to \handle multiple simultaneous )Tj
0 -1.2 TD
(service requests in parallel. This means that the Web server is multi-th\readed. In the main thread, the )Tj
T*
(server listens to a fixed port. When it receives a TCP connection reques\t, it sets up a TCP connection )Tj
T*
(through another port and services the request in a separate thread. To s\implify this programming task, we )Tj
T*
(will develop the code in two stages. In the first stage, you will write \a multi-threaded server that simply )Tj
T*
(displays the contents of the HTTP request message that it receives. Afte\r this program is running properly, )Tj
T*
(you will add the code required to generate an appropriate response. )Tj
0 -2.72 TD
(As you are developing the code, you can test your server from a Web brow\ser. But remember that you are )Tj
0 -1.2 TD
(not serving through the standard port 80, so you need to specify the por\t number within the URL that you )Tj
0 -1.208 TD
(give to your browser. For example, if your machine's name is )Tj
/T1_1 1 Tf
(host.someschool.edu)Tj
/TT0 1 Tf
(, your server is )Tj
T*
(listening to port 6789, and you want to retrieve the file )Tj
/T1_1 1 Tf
(index.html)Tj
/TT0 1 Tf
(, then you would specify the following )Tj
0 -1.2 TD
(URL within the browser: )Tj
/T1_1 1 Tf
14 0 0 14 10 359.7112 Tm
(http://host.someschool.edu:6789/index.html)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 325.3052 Tm
(If you omit ":6789", the browser will assume port 80 which most likely w\ill not have a server listening on it. )Tj
0 -2.72 TD
(When the server encounters an error, it sends a response message with th\e appropriate HTML source so )Tj
0 -1.2 TD
(that the error information is displayed in the browser window. )Tj
0.655 0.486 0.275 rg
/TT1 1 Tf
17.5 0 0 17.5 10 238.5005 Tm
(Web Server in Java: Part A)Tj
0 0 0 rg
/TT0 1 Tf
12.5 0 0 12.5 10 202.3052 Tm
(In the following steps, we will go through the code for the first implem\entation of our Web Server. )Tj
T*
(Wherever you see "?", you will need to supply a missing detail. )Tj
0 -2.72 TD
(Our first implementation of the Web server will be multi-threaded, where\ the processing of each incoming )Tj
0 -1.2 TD
(request will take place inside a separate thread of execution. This allo\ws the server to service multiple )Tj
T*
(clients in parallel, or to perform multiple file transfers to a single c\lient in parallel. When we create a new )Tj
T*
(thread of execution, we need to pass to the Thread's constructor an inst\ance of some class that )Tj
0 -1.208 TD
(implements the )Tj
/T1_1 1 Tf
(Runnable)Tj
/TT0 1 Tf
( interface. This is the reason that we define a separate class called )Tj
/T1_1 1 Tf
T*
(HttpRequest)Tj
/TT0 1 Tf
(. The structure of the Web server is shown below: )Tj
/T1_1 1 Tf
14 0 0 14 10 42.7142 Tm
(import java.io.* ;)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\1 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj39 0 obj<</Length 2077>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(import java.net.* ;)Tj
0 -1.2 TD
(import java.util.* ;)Tj
0 -2.4 TD
(public final class WebServer)Tj
0 -1.2 TD
({)Tj
T*
(        public static void main\(String argv[]\) throws Exception)Tj
T*
(        {)Tj
T*
(                . . .)Tj
T*
(        })Tj
T*
(})Tj
0 -2.4 TD
(final class HttpRequest implements Runnable)Tj
0 -1.2 TD
({)Tj
T*
(        . . .)Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 484.3022 Tm
(Normally, Web servers process service requests that they receive through\ well-known port number 80. )Tj
T*
(You can choose any port higher than 1024, but remember to use the same p\ort number when making )Tj
T*
(requests to your Web server from your browser. )Tj
/T1_1 1 Tf
14 0 0 14 10 418.9082 Tm
(public static void main\(String argv[]\) throws Exception)Tj
T*
({)Tj
T*
(        // Set the port number.)Tj
T*
(        int port = 6789;)Tj
0 -2.4 TD
(        . . .)Tj
0 -1.2 TD
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 283.7022 Tm
(Next, we open a socket and wait for a TCP connection request. Because we\ will be servicing request )Tj
T*
(messages indefinitely, we place the listen operation inside of an infini\te loop. This means we will have to )Tj
T*
(terminate the Web server by pressing ^C on the keyboard. )Tj
/T1_1 1 Tf
14 0 0 14 10 218.3082 Tm
(// Establish the listen socket.)Tj
T*
(       ?)Tj
0 -2.4 TD
(// Process HTTP service requests in an infinite loop.)Tj
0 -1.2 TD
(while \(true\) {)Tj
T*
(        // Listen for a TCP connection request.)Tj
T*
(        ?)Tj
0 -2.4 TD
(        . . .)Tj
0 -1.2 TD
(})Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\2 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj40 0 obj<</Length 3473>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/TT0 1 Tf
12.5 0 0 12.5 10 755.2037 Tm
(When a connection request is received, we create an )Tj
/T1_1 1 Tf
(HttpRequest)Tj
/TT0 1 Tf
( object, passing to its constructor a )Tj
0 -1.208 TD
(reference to the )Tj
/T1_1 1 Tf
(Socket)Tj
/TT0 1 Tf
( object that represents our established connection with the client. )Tj
/T1_1 1 Tf
14 0 0 14 10 704.7112 Tm
(// Construct an object to process the HTTP request message.)Tj
0 -1.2 TD
(HttpRequest request = new HttpRequest\( ? \);)Tj
0 -2.4 TD
(// Create a new thread to process the request.)Tj
0 -1.2 TD
(Thread thread = new Thread\(request\);)Tj
0 -2.4 TD
(// Start the thread.)Tj
0 -1.2 TD
(thread.start\(\);)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 552.6067 Tm
(In order to have the )Tj
/T1_1 1 Tf
(HttpRequest)Tj
/TT0 1 Tf
( object handle the incoming HTTP service request in a separate )Tj
0 -1.208 TD
(thread, we first create a new )Tj
/T1_1 1 Tf
(Thread)Tj
/TT0 1 Tf
( object, passing to its constructor a reference to the )Tj
/T1_1 1 Tf
(HttpRequest)Tj
/TT0 1 Tf
( )Tj
T*
(object, and then call the thread's )Tj
/T1_1 1 Tf
(start\(\))Tj
/TT0 1 Tf
( method. )Tj
0 -2.72 TD
(After the new thread has been created and started, execution in the main\ thread returns to the top of the )Tj
0 -1.2 TD
(message processing loop. The main thread will then block, waiting for an\other TCP connection request, )Tj
T*
(while the new thread continues running. When another TCP connection requ\est is received, the main )Tj
T*
(thread goes through the same process of thread creation regardless of wh\ether the previous thread has )Tj
T*
(finished execution or is still running. )Tj
0 -2.728 TD
(This completes the code in )Tj
/T1_1 1 Tf
(main\(\))Tj
/TT0 1 Tf
(. For the remainder of the lab, it remains to develop the )Tj
/T1_1 1 Tf
(HttpRequest)Tj
/TT0 1 Tf
( )Tj
0 -1.2 TD
(class. )Tj
0 -2.728 TD
(We declare two variables for the HttpRequest class: )Tj
/T1_1 1 Tf
(CRLF)Tj
/TT0 1 Tf
( and )Tj
/T1_1 1 Tf
(socket)Tj
/TT0 1 Tf
(. According to the HTTP )Tj
0 -1.2 TD
(specification, we need to terminate each line of the server's response m\essage with a carriage return \(CR\) )Tj
0 -1.208 TD
(and a line feed \(LF\), so we have defined )Tj
/T1_1 1 Tf
(CRLF)Tj
/TT0 1 Tf
( as a convenience. The variable )Tj
/T1_1 1 Tf
(socket)Tj
/TT0 1 Tf
( will be used to )Tj
0 -1.2 TD
(store a reference to the connection socket, which is passed to the const\ructor of this class. The structure )Tj
T*
(of the HttpRequest class is shown below: )Tj
/T1_1 1 Tf
14 0 0 14 10 249.7202 Tm
(final class HttpRequest implements Runnable)Tj
T*
({)Tj
T*
(        final static String CRLF = "\\r\\n";)Tj
T*
(        Socket socket;)Tj
0 -2.4 TD
(        // Constructor)Tj
0 -1.2 TD
(        public HttpRequest\(Socket socket\) throws Exception )Tj
T*
(        {)Tj
T*
(                this.socket = socket;)Tj
T*
(        })Tj
0 -2.4 TD
(        // Implement the run\(\) method of the Runnable interface.)Tj
0 -1.2 TD
(        public void run\(\))Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\3 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj41 0 obj<</Length 3267>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(        {)Tj
0 -1.2 TD
(                . . .)Tj
T*
(        })Tj
0 -2.4 TD
(        private void processRequest\(\) throws Exception)Tj
0 -1.2 TD
(        {)Tj
T*
(                . . .)Tj
T*
(        })Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 585.0037 Tm
(In order to pass an instance of the )Tj
/T1_1 1 Tf
(HttpRequest)Tj
/TT0 1 Tf
( class to the )Tj
/T1_1 1 Tf
(Thread)Tj
/TT0 1 Tf
('s constructor, )Tj
/T1_1 1 Tf
(HttpRequest)Tj
/TT0 1 Tf
( must )Tj
0 -1.208 TD
(implement the )Tj
/T1_1 1 Tf
(Runnable)Tj
/TT0 1 Tf
( interface, which simply means that we must define a public method calle\d )Tj
/T1_1 1 Tf
(run)Tj
T*
(\(\))Tj
/TT0 1 Tf
( that returns )Tj
/T1_1 1 Tf
(void)Tj
/TT0 1 Tf
(. Most of the processing will take place within )Tj
/T1_1 1 Tf
(processRequest\(\))Tj
/TT0 1 Tf
(, which is called )Tj
T*
(from within )Tj
/T1_1 1 Tf
(run\(\))Tj
/TT0 1 Tf
(. )Tj
0 -2.72 TD
(Up until this point, we have been throwing exceptions, rather than catch\ing them. However, we can not )Tj
0 -1.208 TD
(throw exceptions from )Tj
/T1_1 1 Tf
(run\(\))Tj
/TT0 1 Tf
(, because we must strictly adhere to the declaration of )Tj
/T1_1 1 Tf
(run\(\))Tj
/TT0 1 Tf
( in the )Tj
/T1_1 1 Tf
T*
(Runnable)Tj
/TT0 1 Tf
( interface, which does not throw any exceptions. We will place all the p\rocessing code in )Tj
/T1_1 1 Tf
T*
(processRequest\(\))Tj
/TT0 1 Tf
(, and from there, throw exceptions to )Tj
/T1_1 1 Tf
(run\(\))Tj
/TT0 1 Tf
(. Within )Tj
/T1_1 1 Tf
(run\(\))Tj
/TT0 1 Tf
(, we explicitly catch and )Tj
0 -1.2 TD
(handle exceptions with a try/catch block. )Tj
/T1_1 1 Tf
14 0 0 14 10 410.0186 Tm
(// Implement the run\(\) method of the Runnable interface.)Tj
T*
(public void run\(\))Tj
T*
({)Tj
T*
(        try {)Tj
T*
(                processRequest\(\);)Tj
T*
(        } catch \(Exception e\) {)Tj
T*
(                System.out.println\(e\);)Tj
T*
(        })Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 241.1142 Tm
(Now, let's develop the code within )Tj
/T1_1 1 Tf
(processRequest\(\))Tj
/TT0 1 Tf
(. We first obtain references to the socket's input )Tj
0 -1.208 TD
(and output streams. Then we wrap )Tj
/T1_1 1 Tf
(InputStreamReader)Tj
/TT0 1 Tf
( and )Tj
/T1_1 1 Tf
(BufferedReader)Tj
/TT0 1 Tf
( filters around the input )Tj
0 -1.2 TD
(stream. However, we won't wrap any filters around the output stream, bec\ause we will be writing bytes )Tj
T*
(directly into the output stream. )Tj
/T1_1 1 Tf
14 0 0 14 10 160.6216 Tm
(private void processRequest\(\) throws Exception)Tj
T*
({)Tj
T*
(        // Get a reference to the socket's input and output streams.)Tj
T*
(        InputStream is = ?;)Tj
T*
(        DataOutputStream os = ?;)Tj
0 -2.4 TD
(        // Set up input stream filters.)Tj
0 -1.2 TD
(        ? )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\4 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj42 0 obj<</Length 3138>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(        BufferedReader br = ?;)Tj
0 -2.4 TD
(        . . .)Tj
0 -1.2 TD
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 669.1022 Tm
(Now we are prepared to get the client's request message, which we do by \reading from the socket's input )Tj
0 -1.208 TD
(stream. The )Tj
/T1_1 1 Tf
(readLine\(\))Tj
/TT0 1 Tf
( method of the )Tj
/T1_1 1 Tf
(BufferedReader)Tj
/TT0 1 Tf
( class will extract characters from the input )Tj
0 -1.2 TD
(stream until it reaches an end-of-line character, or in our case, the en\d-of-line character sequence CRLF. )Tj
0 -2.72 TD
(The first item available in the input stream will be the HTTP request li\ne. \(See Section 2.2 of the textbook )Tj
0 -1.2 TD
(for a description of this and the following fields.\) )Tj
/T1_1 1 Tf
14 0 0 14 10 554.6097 Tm
(// Get the request line of the HTTP request message.)Tj
T*
(String requestLine = ?;)Tj
0 -2.4 TD
(// Display the request line.)Tj
0 -1.2 TD
(System.out.println\(\);)Tj
T*
(System.out.println\(requestLine\);)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 436.2037 Tm
(After obtaining the request line of the message header, we obtain the he\ader lines. Since we don't know )Tj
T*
(ahead of time how many header lines the client will send, we must get th\ese lines within a looping )Tj
T*
(operation. )Tj
/T1_1 1 Tf
14 0 0 14 10 370.8097 Tm
(// Get and display the header lines.)Tj
T*
(String headerLine = null;)Tj
T*
(while \(\(headerLine = br.readLine\(\)\).length\(\) != 0\) {)Tj
T*
(        System.out.println\(headerLine\);)Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 269.2037 Tm
(We don't need the header lines, other than to print them to the screen, \so we use a temporary String )Tj
0 -1.208 TD
(variable, )Tj
/T1_1 1 Tf
(headerLine)Tj
/TT0 1 Tf
(, to hold a reference to their values. The loop terminates when the expr\ession )Tj
/T1_1 1 Tf
14 0 0 14 10 218.7112 Tm
(\(headerLine = br.readLine\(\)\).length\(\))Tj
/TT0 1 Tf
12.5 0 0 12.5 10 184.2067 Tm
(evaluates to zero, which will occur when )Tj
/T1_1 1 Tf
(headerLine)Tj
/TT0 1 Tf
( has zero length. This will happen when the empty )Tj
0 -1.2 TD
(line terminating the header lines is read. \(See the HTTP Request Messag\e diagram in Section 2.2 of the )Tj
T*
(textbook\) )Tj
0 -2.72 TD
(In the next step of this lab, we will add code to analyze the client's r\equest message and send a response. )Tj
0 -1.2 TD
(But before we do this, let's try compiling our program and testing it wi\th a browser. Add the following lines )Tj
T*
(of code to close the streams and socket connection. )Tj
/T1_1 1 Tf
14 0 0 14 10 54.8127 Tm
(// Close streams and socket.)Tj
T*
(os.close\(\);)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\5 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj43 0 obj<</Length 3808>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 751.2127 Tm
(br.close\(\);)Tj
0 -1.2 TD
(socket.close\(\);)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 700.0067 Tm
(After your program successfully compiles, run it with an available port \number, and try contacting it from a )Tj
T*
(browser. To do this, you should enter into the browser's address text bo\x the IP address of your running )Tj
0 -1.208 TD
(server. For example, if your machine name is )Tj
/T1_1 1 Tf
(host.someschool.edu)Tj
/TT0 1 Tf
(, and you ran the server with port )Tj
0 -1.2 TD
(number 6789, then you would specify the following URL: )Tj
/T1_1 1 Tf
14 0 0 14 10 619.5142 Tm
(http://host.someschool.edu:6789/)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 585.1082 Tm
(The server should display the contents of the HTTP request message. Chec\k that it matches the message )Tj
T*
(format shown in the HTTP Request Message diagram in Section 2.2 of the t\extbook. )Tj
0.655 0.486 0.275 rg
/TT1 1 Tf
17.5 0 0 17.5 10 532.3035 Tm
(Web Server in Java: Part B)Tj
0 0 0 rg
/TT0 1 Tf
12.5 0 0 12.5 10 496.1082 Tm
(Instead of simply terminating the thread after displaying the browser's \HTTP request message, we will )Tj
T*
(analyze the request and send an appropriate response. We are going to ig\nore the information in the )Tj
T*
(header lines, and use only the file name contained in the request line. \In fact, we are going to assume that )Tj
T*
(the request line always specifies the GET method, and ignore the fact th\at the client may be sending some )Tj
T*
(other type of request, such as HEAD or POST. )Tj
0 -2.728 TD
(We extract the file name from the request line with the aid of the )Tj
/T1_1 1 Tf
(StringTokenizer)Tj
/TT0 1 Tf
( class. First, we )Tj
0 -1.208 TD
(create a )Tj
/T1_1 1 Tf
(StringTokenizer)Tj
/TT0 1 Tf
( object that contains the string of characters from the request line. Se\cond, )Tj
0 -1.2 TD
(we skip over the method specification, which we have assumed to be "GET"\. Third, we extract the file )Tj
T*
(name. )Tj
/T1_1 1 Tf
14 0 0 14 10 321.5172 Tm
(// Extract the filename from the request line.)Tj
T*
(StringTokenizer tokens = new StringTokenizer\(requestLine\);)Tj
T*
(tokens.nextToken\(\);  // skip over the method, which should be "GET")Tj
T*
(String fileName = tokens.nextToken\(\);)Tj
0 -2.4 TD
(// Prepend a "." so that file request is within the current directory.)Tj
0 -1.2 TD
(fileName = "." + fileName;)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 186.3112 Tm
(Because the browser precedes the filename with a slash, we prefix a dot \so that the resulting pathname )Tj
T*
(starts within the current directory. )Tj
0 -2.72 TD
(Now that we have the file name, we can open the file as the first step i\n sending it to the client. If the file )Tj
0 -1.208 TD
(does not exist, the )Tj
/T1_1 1 Tf
(FileInputStream\(\))Tj
/TT0 1 Tf
( constructor will throw the )Tj
/T1_1 1 Tf
(FileNotFoundException)Tj
/TT0 1 Tf
(. Instead )Tj
0 -1.2 TD
(of throwing this possible exception and terminating the thread, we will \use a try/catch construction to set )Tj
0 -1.208 TD
(the boolean variable )Tj
/T1_1 1 Tf
(fileExists)Tj
/TT0 1 Tf
( to false. Later in the code, we will use this flag to construct an erro\r )Tj
0 -1.2 TD
(response message, rather than try to send a nonexistent file. )Tj
/T1_1 1 Tf
14 0 0 14 10 41.7202 Tm
(// Open the requested file.)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\6 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj44 0 obj<</Subtype/TrueType/FontDescriptor 45 0 R/LastChar 255/Widths[750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 350 556 350 222 556 333 1000 556 556 333 1000 667 333 1000 350 611 350 350 222 222 333 333 350 556 1000 333 1000 500 333 944 350 500 667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500]/BaseFont/Arial,Italic/FirstChar 0/Encoding/WinAnsiEncoding/Type/Font>>endobj45 0 obj<</StemV 92/FontName/Arial,Italic/FontStretch/Normal/FontWeight 400/Flags 96/Descent -325/FontBBox[-517 -325 1082 998]/Ascent 998/FontFamily(Arial)/CapHeight 716/XHeight 519/Type/FontDescriptor/ItalicAngle -12>>endobj46 0 obj<</Length 2876>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.9082 Tm
(FileInputStream fis = null;)Tj
0 -1.2 TD
(boolean fileExists = true;)Tj
T*
(try {)Tj
T*
(        fis = new FileInputStream\(fileName\);)Tj
T*
(} catch \(FileNotFoundException e\) {)Tj
T*
(        fileExists = false;)Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 618.7022 Tm
(There are three parts to the response message: the status line, the resp\onse headers, and the entity )Tj
T*
(body. The status line and response headers are terminated by the charact\er sequence CRLF. We are )Tj
0 -1.208 TD
(going to respond with a status line, which we store in the variable )Tj
/T1_1 1 Tf
(statusLine)Tj
/TT0 1 Tf
(, and a single response )Tj
T*
(header, which we store in the variable )Tj
/T1_1 1 Tf
(contentTypeLine)Tj
/TT0 1 Tf
(. In the case of a request for a nonexistent file, )Tj
0 -1.2 TD
(we return )Tj
/TT1 1 Tf
(404 Not Found)Tj
/TT0 1 Tf
( in the status line of the response message, and include an error messag\e in the )Tj
0 -1.201 TD
(form of an HTML document in the entity body. )Tj
/T1_1 1 Tf
14 0 0 14 10 508.0927 Tm
(// Construct the response message.)Tj
0 -1.2 TD
(String statusLine = null;)Tj
T*
(String contentTypeLine = null;)Tj
T*
(String entityBody = null;)Tj
T*
(if \(fileExists\) {)Tj
T*
(        statusLine = ?;)Tj
T*
(        contentTypeLine = "Content-type: " + )Tj
T*
(                contentType\( fileName \) + CRLF;)Tj
T*
(} else {)Tj
T*
(        statusLine = ?;)Tj
T*
(        contentTypeLine = ?;)Tj
T*
(        entityBody = "<HTML>" + )Tj
T*
(                "<HEAD><TITLE>Not Found</TITLE></HEAD>" +)Tj
T*
(                "<BODY>Not Found</BODY></HTML>";)Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 238.4868 Tm
(When the file exists, we need to determine the file's MIME type and send\ the appropriate MIME-type )Tj
0 -1.208 TD
(specifier. We make this determination in a separate private method calle\d )Tj
/T1_1 1 Tf
(contentType\(\))Tj
/TT0 1 Tf
(, which )Tj
0 -1.2 TD
(returns a string that we can include in the content type line that we ar\e constructing. )Tj
0 -2.72 TD
(Now we can send the status line and our single header line to the browse\r by writing into the socket's )Tj
0 -1.2 TD
(output stream. )Tj
/T1_1 1 Tf
14 0 0 14 10 123.9942 Tm
(// Send the status line.)Tj
T*
(os.writeBytes\(statusLine\);)Tj
0 -2.4 TD
(// Send the content type line.)Tj
0 -1.2 TD
(os.writeBytes\(?\);)Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\7 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj47 0 obj<</Length 3431>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
14 0 0 14 10 753.1942 Tm
(// Send a blank line to indicate the end of the header lines.)Tj
0 -1.2 TD
(os.writeBytes\(CRLF\);)Tj
/TT0 1 Tf
12.5 0 0 12.5 10 701.9883 Tm
(Now that the status line and header line with delimiting CRLF have been \placed into the output stream on )Tj
T*
(their way to the browser, it is time to do the same with the entity body\. If the requested file exists, we call a )Tj
T*
(separate method to send the file. If the requested file does not exist, \we send the HTML-encoded error )Tj
T*
(message that we have prepared. )Tj
/T1_1 1 Tf
14 0 0 14 10 621.5942 Tm
(// Send the entity body.)Tj
T*
(if \(fileExists\) {)Tj
T*
(        sendBytes\(fis, os\);)Tj
T*
(        fis.close\(\);)Tj
T*
(} else {)Tj
T*
(        os.writeBytes\(?\);)Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 486.3883 Tm
(After sending the entity body, the work in this thread has finished, so \we close the streams and socket )Tj
T*
(before terminating. )Tj
0 -2.72 TD
(We still need to code the two methods that we have referenced in the abo\ve code, namely, the method )Tj
0 -1.208 TD
(that determines the MIME type, )Tj
/T1_1 1 Tf
(contentType\(\))Tj
/TT0 1 Tf
(, and the method that writes the requested file onto the )Tj
0 -1.2 TD
(socket's output stream. Let's first take a look at the code for sending \the file to the client. )Tj
/T1_1 1 Tf
14 0 0 14 10 371.8957 Tm
(private static void sendBytes\(FileInputStream fis, OutputStream os\) )Tj
T*
(throws Exception)Tj
T*
({)Tj
T*
(   // Construct a 1K buffer to hold bytes on their way to the socket.)Tj
T*
(   byte[] buffer = new byte[1024];)Tj
T*
(   int bytes = 0;)Tj
0 -2.4 TD
(   // Copy requested file into the socket's output stream.)Tj
0 -1.2 TD
(   while\(\(bytes = fis.read\(buffer\)\) != -1 \) {)Tj
T*
(      os.write\(buffer, 0, bytes\);)Tj
T*
(   })Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 152.5912 Tm
(Both )Tj
/T1_1 1 Tf
(read\(\))Tj
/TT0 1 Tf
( and )Tj
/T1_1 1 Tf
(write\(\))Tj
/TT0 1 Tf
( throw exceptions. Instead of catching these exceptions and handling the\m in )Tj
T*
(our code, we throw them to be handled by the calling method. )Tj
0 -2.728 TD
(The variable, )Tj
/T1_1 1 Tf
(buffer)Tj
/TT0 1 Tf
(, is our intermediate storage space for bytes on their way from the file\ to the output )Tj
0 -1.208 TD
(stream. When we read the bytes from the )Tj
/T1_1 1 Tf
(FileInputStream)Tj
/TT0 1 Tf
(, we check to see if )Tj
/T1_1 1 Tf
(read\(\))Tj
/TT0 1 Tf
( returns minus )Tj
T*
(one, indicating that the end of the file has been reached. If the end of\ the file has not been reached, )Tj
/T1_1 1 Tf
(read)Tj
T*
(\(\))Tj
/TT0 1 Tf
( returns the number of bytes that have been placed into )Tj
/T1_1 1 Tf
(buffer)Tj
/TT0 1 Tf
(. We use the )Tj
/T1_1 1 Tf
(write\(\))Tj
/TT0 1 Tf
( method of the )Tj
/T1_1 1 Tf
T*
(OutputStream)Tj
/TT0 1 Tf
( class to place these bytes into the output stream, passing to it the na\me of the byte array, )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\8 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj48 0 obj<</Length 2551>>stream
/Artifact <</Attached [/Top ]/Type /Pagination /BBox [18 778 582 787 ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Programming Assignment 1: Building a Multi-Threaded Web Server)Tj
ET
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
BT
/T1_1 1 Tf
12.5 0 0 12.5 10 755.2037 Tm
(buffer)Tj
/TT0 1 Tf
(, the starting point in the array, )Tj
/T1_1 1 Tf
(0)Tj
/TT0 1 Tf
(, and the number of bytes in the array to write, )Tj
/T1_1 1 Tf
(bytes)Tj
/TT0 1 Tf
(. )Tj
0 -2.72 TD
(The final piece of code needed to complete the Web server is a method th\at will examine the extension of )Tj
0 -1.2 TD
(a file name and return a string that represents it's MIME type. If the f\ile extension is unknown, we return )Tj
0 -1.208 TD
(the type )Tj
/T1_1 1 Tf
(application/octet-stream)Tj
/TT0 1 Tf
(. )Tj
/T1_1 1 Tf
14 0 0 14 10 655.7112 Tm
(private static String contentType\(String fileName\))Tj
0 -1.2 TD
({)Tj
T*
(        if\(fileName.endsWith\(".htm"\) || fileName.endsWith\(".html"\)\)\ {)Tj
T*
(                return "text/html";)Tj
T*
(        })Tj
T*
(        if\(?\) {)Tj
T*
(                ?;)Tj
T*
(        })Tj
T*
(        if\(?\) {)Tj
T*
(                ?;)Tj
T*
(        })Tj
T*
(        return "application/octet-stream";)Tj
T*
(})Tj
/TT0 1 Tf
12.5 0 0 12.5 10 419.7052 Tm
(There is a lot missing from this method. For instance, nothing is return\ed for GIF or JPEG files. You may )Tj
T*
(want to add the missing file types yourself, so that the components of y\our home page are sent with the )Tj
0 -1.208 TD
(content type correctly specified in the content type header line. For GI\Fs the MIME type is )Tj
/T1_1 1 Tf
(image/gif)Tj
/TT0 1 Tf
( )Tj
T*
(and for JPEGs it is )Tj
/T1_1 1 Tf
(image/jpeg)Tj
/TT0 1 Tf
(. )Tj
0 -2.72 TD
(This completes the code for the second phase of development of your Web \server. Try running the server )Tj
0 -1.2 TD
(from the directory where your home page is located, and try viewing your\ home page files with a browser. )Tj
T*
(Remember to include a port specifier in the URL of your home page, so th\at your browser doesn't try to )Tj
T*
(connect to the default port 80. When you connect to the running web serv\er with the browser, examine the )Tj
T*
(GET message requests that the web server receives from the browser. )Tj
ET
EMC 
/Artifact <</Attached [/Bottom ]/Type /Pagination /BBox [18 5 582 14 ]>>BDC 
Q
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html \(\9 of 9\)2006-12-3 6:33:30)Tj
ET
EMC 

endstreamendobj49 0 obj(Programming Assignment 1: Building a Multi-Threaded Web Server)endobj50 0 obj<</C 54 0 R/V 1.25>>endobj51 0 obj<</URL(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html)/S 52 0 R>>endobj52 0 obj<</G 53 0 R>>endobj53 0 obj<</CB 0/M[10.08 10.08 26.0 36.0]/S 0/PO 0/PS[792.0 612.0]/AH 0/AL 0/SU 1/AS 1/AT 70>>endobj54 0 obj[51 0 R]endobj55 0 obj(http://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab1/lab1.html)endobj56 0 obj(\\\)'¶…VÙˆî"ÑøÛ•OØ)endobj57 0 obj<</TS(D:20061203053331)/ID 56 0 R/CT(text/html)/O[11 0 R 16 0 R 18 0 R 20 0 R 22 0 R 24 0 R 26 0 R 28 0 R 30 0 R]/S/SPS/T 49 0 R/TID 59 0 R/SI 58 0 R>>endobj58 0 obj<</TS(D:20061203053331)/AU 55 0 R>>endobj59 0 obj(b—^^$ad]˛cŒyg‡å)endobj60 0 obj<</IDS 61 0 R/URLS 62 0 R>>endobj61 0 obj<</Names[56 0 R 57 0 R]>>endobj62 0 obj<</Names[55 0 R 57 0 R]>>endobj63 0 obj<</First 64 0 R/Parent 5 0 R/Count 1/Last 64 0 R/Title(pearsoncmg.com)>>endobj64 0 obj<</Parent 63 0 R/Dest[11 0 R/XYZ 0 792 null]/SE 10 0 R/Title(Programming Assignment 1: Building a Multi-Threaded Web Server)>>endobj65 0 obj<</Subtype/XML/Length 3436/Type/Metadata>>stream
<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:ModifyDate>2006-12-03T06:33:31+01:00</xap:ModifyDate>
         <xap:CreateDate>2006-12-03T06:33:25+01:00</xap:CreateDate>
         <xap:MetadataDate>2006-12-03T06:33:31+01:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/pdf</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Programming Assignment 1: Building a Multi-Threaded Web Server</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:2572d5cd-da6f-49cf-87e0-2b017f347dc2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:25fc1f3a-002c-4c46-8c8a-588034187858</xapMM:InstanceID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Web Capture 7.0</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
endstreamendobjxref
0 66
0000000004 00000 f
0000000016 00000 n
0000000143 00000 n
0000000250 00000 n
0000000006 00000 f
0000000444 00000 n
0000000000 00001 f
0000000510 00000 n
0000000610 00000 n
0000000654 00000 n
0000000701 00000 n
0000001008 00000 n
0000001225 00000 n
0000001332 00000 n
0000001356 00000 n
0000001524 00000 n
0000001548 00000 n
0000001740 00000 n
0000001764 00000 n
0000001956 00000 n
0000001980 00000 n
0000002172 00000 n
0000002196 00000 n
0000002388 00000 n
0000002412 00000 n
0000002615 00000 n
0000002639 00000 n
0000002842 00000 n
0000002866 00000 n
0000003058 00000 n
0000003082 00000 n
0000003274 00000 n
0000003298 00000 n
0000003388 00000 n
0000004561 00000 n
0000004781 00000 n
0000004867 00000 n
0000006044 00000 n
0000006270 00000 n
0000010509 00000 n
0000012637 00000 n
0000016161 00000 n
0000019479 00000 n
0000022668 00000 n
0000026527 00000 n
0000027707 00000 n
0000027934 00000 n
0000030861 00000 n
0000034343 00000 n
0000036945 00000 n
0000037025 00000 n
0000037061 00000 n
0000037166 00000 n
0000037195 00000 n
0000037296 00000 n
0000037320 00000 n
0000037408 00000 n
0000037444 00000 n
0000037611 00000 n
0000037662 00000 n
0000037696 00000 n
0000037739 00000 n
0000037780 00000 n
0000037821 00000 n
0000037909 00000 n
0000038051 00000 n
trailer
<</Size 66/Root 1 0 R/Info 3 0 R/ID[<41371E9F847FD9438818050971AB8252><484A4B7172E65E4DA0111831DC733849>]>>
startxref
41564
%%EOF
